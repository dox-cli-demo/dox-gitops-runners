apiVersion: v1
kind: Namespace
metadata:
  name: dox-nfs
---
apiVersion: v1
kind: Service
metadata:
  name: nfs-server
  namespace: dox-nfs
  labels:
    app: nfs-server
spec:
  selector:
    app: nfs-server
  ports:
    - name: nfs
      port: 2049
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nfs-server
  namespace: dox-nfs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nfs-server
  template:
    metadata:
      labels:
        app: nfs-server
    spec:
      containers:
        - name: nfs-server
          image: itsthenetwork/nfs-server-alpine:latest
          ports:
            - containerPort: 2049
          securityContext:
            privileged: true
          env:
            - name: SHARED_DIRECTORY
              value: /nfsshare
          volumeMounts:
            - name: nfs-volume
              mountPath: /nfsshare
      volumes:
        - name: nfs-volume
          emptyDir: {}
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: dox-storage
provisioner: example.com/nfs
volumeBindingMode: Immediate
reclaimPolicy: Retain
---
# This PV simulates what a dynamic provisioner would do
apiVersion: v1
kind: PersistentVolume
metadata:
  name: dox-nfs-pv
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  storageClassName: dox-storage
  persistentVolumeReclaimPolicy: Retain
  nfs:
    server: nfs-server.dox-nfs.svc.cluster.local
    path: /
