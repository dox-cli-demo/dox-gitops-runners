---
apiVersion: v1
kind: Namespace
metadata:
  name: dox-nfs
---
apiVersion: v1
kind: Namespace
metadata:
  name: dox-runners
---
# NFS Server (in-cluster)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dox-nfs-server
  namespace: dox-nfs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dox-nfs-server
  template:
    metadata:
      labels:
        app: dox-nfs-server
    spec:
      containers:
        - name: nfs-server
          image: itsthenetwork/nfs-server-alpine:latest
          securityContext:
            privileged: true
          env:
            - name: SHARED_DIRECTORY
              value: /nfsshare
            - name: PERMITTED
              value: "*"
            - name: READ_ONLY
              value: "false"
            - name: SYNC
              value: "async"
          ports:
            - containerPort: 2049
          volumeMounts:
            - name: nfs-volume
              mountPath: /nfsshare
      volumes:
        - name: nfs-volume
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: nfs-server
  namespace: dox-nfs
spec:
  selector:
    app: dox-nfs-server
  ports:
    - name: nfs
      port: 2049
      targetPort: 2049
---
# ServiceAccount and RBAC for provisioner
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nfs-client-provisioner
  namespace: dox-nfs
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nfs-client-provisioner-role
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nfs-client-provisioner-binding
subjects:
  - kind: ServiceAccount
    name: nfs-client-provisioner
    namespace: dox-nfs
roleRef:
  kind: ClusterRole
  name: nfs-client-provisioner-role
  apiGroup: rbac.authorization.k8s.io
---
# NFS Subdir External Provisioner (ARM-compatible)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nfs-subdir-external-provisioner
  namespace: dox-nfs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nfs-subdir-external-provisioner
  template:
    metadata:
      labels:
        app: nfs-subdir-external-provisioner
    spec:
      hostNetwork: true
      serviceAccountName: nfs-client-provisioner
      containers:
        - name: nfs-subdir-external-provisioner
          image: k8s.gcr.io/sig-storage/nfs-subdir-external-provisioner:v4.0.2
          securityContext:
            privileged: true
          volumeMounts:
            - name: nfs-client-root
              mountPath: /persistentvolumes
          env:
            - name: PROVISIONER_NAME
              value: dox.io/nfs
            - name: NFS_SERVER
              value: nfs-server.dox-nfs.svc.cluster.local
            - name: NFS_PATH
              value: /
            - name: NFS_OPTIONS
              value: "nolock"
      volumes:
        - name: nfs-client-root
          nfs:
            server: nfs-server.dox-nfs.svc.cluster.local
            path: /
---
# StorageClass using NFS Provisioner
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: dox-storage
provisioner: dox.io/nfs
reclaimPolicy: Retain
volumeBindingMode: Immediate
